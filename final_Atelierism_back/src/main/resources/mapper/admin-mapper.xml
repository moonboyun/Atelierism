<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.admin.model.dao.AdminDao">
	<select id="priceListSelect" resultType="priceList">
		select * from price_tbl
	</select>
	
	<update id="updatePriceList">
		update price_tbl
			<set>
				<if test="priceLiving != null and priceLiving != 0">
            		price_living = #{priceLiving},
        		</if>
        		<if test="priceKitchen != null and priceKitchen != 0">
            		price_kitchen = #{priceKitchen},
        		</if>
        		<if test="priceBed != null and priceBed != 0">
            		price_bed = #{priceBed},
        		</if>
        		<if test="priceOneroom != null and priceOneroom != 0">
            		price_oneroom = #{priceOneroom},
        		</if>
        		<if test="priceKidroom != null and priceKidroom != 0">
            		price_kidroom = #{priceKidroom},
        		</if>
        		<if test="priceStudy != null and priceStudy != 0">
            		price_study = #{priceStudy},
        		</if>
        		<if test="priceCharge != null and priceCharge != 0">
            		price_charge = #{priceCharge},
        		</if>
			</set>
	</update>
	
	<select id="adminMemberList" resultType="member">
		select * from member_tbl where member_type = 3
	</select>
	
	<!-- <select id="adminDesignerList">
		
	</select> -->
	
	<select id="memberTotalCount" resultType="int">
		select count(*) from member_tbl where member_type = 3
	</select>
	
	<select id="applicantTotalCount" resultType="int">
		select count(*) 
		from member_tbl m left join designer_tbl d on
		m.member_id = d.member_id
		<if test="memOrder == 'a1'">
			where m.member_type = 3 and m.designer_enter = 0 
			and d.designer_career is not null
		</if>
		<if test="memOrder == 'a2'">
			where m.member_type = 2 and m.designer_enter = 1 
			and d.designer_career is not null
		</if>
		<if test="memOrder == 'a3'">
			where m.member_type = 3 and m.designer_enter = 2 
			and d.designer_career is not null
		</if>
	</select>
	
	<select id="designerTotalCount" resultType="int">
		select count(*) from member_tbl where member_type = 2
	</select>
	
	<select id="selectMemberList" resultType="member">
    SELECT * FROM (
        SELECT rownum AS rnum, b.*
        FROM (
            SELECT
                member_id,
                member_name,
                member_phone,
                member_type
            FROM member_tbl 
            WHERE member_type = 3
            
            <if test="memOrder == 'm1'">
                ORDER BY enroll_date DESC
            </if>
            <if test="memOrder == 'm2'">
                ORDER BY enroll_date ASC
            </if>
            ) b
    )
    WHERE rnum BETWEEN #{start} AND #{end}
</select>

<select id="selectApplicantList" resultType="applicant">
	SELECT * FROM (
        SELECT rownum AS rnum, b.*
        FROM (
        	select m.designer_enter,
					m.member_phone,
					m.member_name,
					d.DESIGNER_CAREER ,
					m.member_id
			from member_tbl m left join designer_tbl d on
			m.member_id = d.member_id
		<if test="memOrder == 'a1'">
			where m.designer_enter = 0 and m.member_type = 3 and d.designer_career is not null
			ORDER BY member_name DESC
		</if>
		<if test="memOrder == 'a3'">
			where m.designer_enter = 2 ORDER BY member_name DESC
		</if>
		<if test="memOrder == 'a2'">
			where m.designer_enter = 1 ORDER BY member_name DESC
		</if>
            ) b
    )
    WHERE rnum BETWEEN #{start} AND #{end}
</select>

<!-- <select id="selectDesignerList" resultType="">
	
</select> -->

<select id="selectApplicantDetail" resultType="applicantDetail">
	select m.member_id, m.member_thumb, m.member_name, d.designer_career, d.designer_age, m.member_email, m.member_phone, m.member_addr, d.designer_graduation_date,
	d.designer_graduation, d.designer_bank, d.designer_account, d.designer_portfolio, d.designer_chat from
		MEMBER_TBL m left join DESIGNER_TBL d 
		on m.member_id = d.MEMBER_ID
	where m.member_id = #{memberId}
</select>

<select id="selectApplicantAward" resultType="applicantAward">
	select m.member_id, a.award_no, a.designer_awards_dete, a.designer_awards 
		from member_tbl m left join designer_awards_career_tbl a 
		on m.member_id = a.member_id
	where m.member_id = #{memberId}
</select>

<select id="selectApplicantCareer" resultType="applicantCareer">
	select m.member_id, c.career_no, c.designer_career_sy, 
	c.designer_career_ey, c.designer_career_com
		from member_tbl m left join designer_career_detail_tbl c
		on m.member_id = c.member_id
	where m.member_id = #{memberId}
</select>

<update id="refusalDesigner">
	update member_tbl set designer_enter = 2 where member_id = #{memberId}
</update>

<update id="enterDesigner">
	update member_tbl set member_type = 2, designer_enter = 1 where member_id = #{memberId}
</update>

<select id="applicantList" resultType="member">
	select m.member_name, m.designer_enter
		from member_tbl m left join designer_tbl d
		on m.member_id = d.member_id
	where d.designer_career is not null and m.member_type = 3 and rownum &lt; 7
	and m.designer_enter = 0
	order by 1 desc
</select>

<select id="topDesigner" resultType="topDesigner">
with select_month as(
    select to_char(add_months(sysdate,-1*(level-1)),'yyyy-mm') mon from dual connect by level &lt;= 6
)
select mon, sum(nvl(interior_price,0)) as total_price,interior_designer, m.member_name, m.MEMBER_PHONE from select_month
left join (select * from interior_tbl) on (mon = substr(interior_payment_date,1,7))
left join member_tbl m on interior_designer = member_id
where mon = #{toMonth} and rownum &lt; 6
group by (mon,interior_designer,m.member_name,m.member_phone)
order by 2 desc
</select>
</mapper>
