<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.designer.model.dao.DesignerDao">
	<select id="selectAllDesigner" resultType="designer">
		select * from designer_tbl
	</select>
	
    <insert id="insertDesigner" parameterType="designer">
        INSERT INTO designer_tbl VALUES (
            #{memberId},
            #{designerCareer},
            #{designerGraduationDate},
            #{designerGraduation},
            #{designerBank},
            #{designerAccount},
            #{designerPortfolio},
            #{designerChat},
            #{designerIntroduce},
            #{designerAge}
        )
    </insert>
    <insert id="insertCareerList" parameterType="list">
        INSERT ALL
        <foreach collection="list" item="career">
            INTO designer_career_detail_tbl VALUES (
                career_seq.NEXTVAL,
                #{career.memberId},
                #{career.designerCareerSy},
                #{career.designerCareerEy},
                #{career.designerCareerCom}
            )
        </foreach>
        SELECT * FROM DUAL
    </insert>
    <insert id="insertAwardList" parameterType="list">
        INSERT ALL
        <foreach collection="list" item="award">
            INTO designer_awards_career_tbl VALUES (
                awards_seq.NEXTVAL,
                #{award.memberId},
                #{award.designerAwardsDete},
                #{award.designerAwards}
            )
        </foreach>
        SELECT * FROM DUAL
    </insert>

    <!-- 회원의 등급을 '디자이너(2)'로 업데이트
    <update id="updateMemberTypeToDesigner" parameterType="string">
        UPDATE member_tbl SET member_type = 2 WHERE member_id = #{memberId}
    </update>
    -->
    <select id="totalCount" resultType="int">
	    SELECT COUNT(*)
	    FROM designer_tbl d
	    JOIN member_tbl m ON (d.member_id = m.member_id)
	    WHERE m.member_type = 2
	</select>
    <select id="selectDesignerList" parameterType="pageInfo" resultType="designerIntro">
	    SELECT * FROM (
	        SELECT ROWNUM AS RNUM, N.* FROM (
	            SELECT
	                d.member_id,
	                m.member_name,
	                m.member_thumb,
	                d.designer_introduce
	            FROM designer_tbl d
	            JOIN member_tbl m ON (d.member_id = m.member_id)
	            WHERE m.member_type = 2
	            ORDER BY m.member_id DESC
	        ) N
	    )
	    WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 디자이너 1명 기본 정보 조회 -->
	<select id="selectOneDesigner" parameterType="string" resultType="designerDetailDTO">
        SELECT
            d.member_id,
            m.member_name,
            m.member_thumb,
            d.designer_career,
            d.designer_age,
            d.designer_graduation_date,
            d.designer_graduation,
            d.designer_portfolio,
            d.designer_chat,
            d.designer_introduce
        FROM designer_tbl d
        JOIN member_tbl m ON (d.member_id = m.member_id)
        WHERE d.member_id = #{memberId}
    </select>
    <!-- 디자이너 1명 모든 경력사항 조회 -->
    <select id="selectDesignerCareers" parameterType="string" resultType="career">
        SELECT * FROM designer_career_detail_tbl WHERE member_id = #{memberId}
    </select>
    <!-- 디자이너 1명 모든 수상내역 조회 -->
    <select id="selectDesignerAwards" parameterType="string" resultType="awards">
        SELECT * FROM designer_awards_career_tbl WHERE member_id = #{memberId}
    </select>
    
	<select id="selectDesignerBoard" resultType="designerIntro">
    select *
    from (
        select 
            d.designer_introduce, 
            m.member_name, 
            m.member_thumb, 
            m.member_id
        from member_tbl m
        right join designer_tbl d on m.member_id = d.member_id
        order by m.member_name desc
    )
    where rownum &lt; 7
    <!-- <, >은 예약어라서 xml에서 사용 불가능 &lt; 사용 -->
	</select>
</mapper>
